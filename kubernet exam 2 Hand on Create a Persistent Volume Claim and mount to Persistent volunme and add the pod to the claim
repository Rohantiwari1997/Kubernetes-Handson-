
Hands on Create a persistenc Volume claim and mounth to PV and use in pod multilple pod 

Additional Information and Resources
You have been given access to a two-node cluster. Within that cluster, a PersistentVolume has already been created. You must identify the size of the volume in order to make a PersistentVolumeClaim and mount the volume to your pod. Once you have created the PVC and mounted it to your running pod, you must copy the contents of /etc/passwd to the volume. Finally, you will delete the pod and create a new pod with the volume mounted in order to demonstrate the persistence of data. You must perform the following tasks in order to complete this hands-on lab:

All objects should be in the web namespace.
The PersistentVolumeClaim name should be data-pvc.
The PVC request should be 256 MiB.
The access mode for the PVC should be ReadWriteOnce.
The storage class name should be local-storage.
The pod name should be data-pod.
The pod image should be busybox and the tag should be 1.28.
The pod should request the PersistentVolumeClaim named data-pvc, and the volume name should be temp-data.
The pod should mount the volume named temp-data to the /tmp/data directory.
The name of the second pod should be data-pod2.


Create the `PersistentVolumeClaim`.
Use the following command to check if there is already a web namespace:

kubectl get node
kubectl get ns

Verify the pv persistence volume 
kubectl get pv

output : 
NAME      CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS    REASON   AGE
data-pv   1Gi        RWO            Retain           Available           local-storage            34m

####################################################################################################################################
Use the following command to create a PersistentVolumeClaim:

vi data-pvc.yaml #copy and paste from docs : navigate to kubernets.io in documentation Search : kubectl apply 

Change the following in the data-pvc.yaml file:

name: data-pvc
namespace: web
storageClassName: local-storage
storage: 256Mi
##############################################################################################################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
  namespaces: web
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
	  
Use the following command to create the PVC:

kubectl apply -f data-pvc.yaml

Verify
kubectl get pvc -n web 
output : 
NAME       STATUS   VOLUME    CAPACITY   ACCESS MODES   STORAGECLASS    AGE
data-pvc   Bound    data-pv   1Gi        RWO            local-storage   4m16s
	  
####################################################################################################################################
Short cut command to create a pod 

kubectl run <name-of pod> --image=busybox:<tag> --restart=Never -o yaml --dry-run -- /bin/sh -c 'sleep 3600' > data-pod.yaml

kubectl run data-pod --image=busybox:1.28 --restart=Never -o yaml --dry-run -- /bin/sh -c 'sleep 3600' > data-pod.yaml

##################################################################################################################################
vi data-pod.yaml

Use the following command to edit the data-pod.yaml file:
vi data-pod.yaml
Add the following to the data-pod.yaml file:
apiVersion: v1
kind: Pod
metadata:
  name: data-pod
  namespace: web                            --- add the namespace 
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - sleep 3600
    image: busybox:1.28
    name: data-pod
    resources: {}
    volumeMounts:                 ---- add the volumeMounts 
    - name: temp-data
      mountPath: /tmp/data
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  volumes:                               ------------------ add the claim 
  - name: temp-data
    persistentVolumeClaim:
      claimName: data-pvc                      ------------------ created the yaml file name 
######################################################################################################################################
example : 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: data-pod
  name: data-pod
  namespace: web
spec:
  containers:
  - args:
    - /bin/sh
    - -c
    - sleep 3600
    image: busybox:1.28
    name: data-pod
    resources: {}
    volumeMounts:
    - name: temp-data
      mountPath: /tmp/data
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  volumes:
  - name: temp-data
    persistentVolumeClaim:
     claimName: data-pvc
status: {}
~
:wq!
#######################################################################################################################
Use the following command to create the pod:
kubectl apply -f data-pod.yaml

Use the following command to connect to the pod:
kubectl exec -it data-pod -n web -- sh

Use the following command to copy the contents of the etc/passwd file to /tmp/data:
# cp /etc/passwd /tmp/data/passwd

Use the following command to list the contents of /tmp/data:
# ls /tmp/data/

#########################################################################################################################

Delete the pod and create a new pod and view volume data.

Use the following command to delete the pod:

 kubectl delete po data-pod -n web

Use the following command to modify the pod YAML:

 vi data-pod.yaml
Change the following line in the data-pod.yaml file:

 name: data-pod2
Use the following command to create a new pod:

 kubectl apply -f data-pod.yaml
Use the following command to connect to the pod and view the contents of the volume:

 kubectl exec -it data-pod2 -n web -- sh
 # ls /tmp/data
 
#######################################################################################################
Thank You 